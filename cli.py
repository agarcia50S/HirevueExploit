import argparse
from view_questions import *

usage_msg = '''
[Command format: python view_questions.py INTERVIEW LINK]
[-e, --encrypted: Pass alone when questions are encrypted]
[-s, --save: Use to save questions at given path in a text]
['-a', --auth: Pass with value to add authorization header to GET requestion]
'''

parser = argparse.ArgumentParser(prog='QSnatch',
                                 description='The program requests access to your interview question and presents them to you',
                                 epilog='For more help see the documentation at https://github.com/agarcia50S/HirevueExploit',
                                 usage=usage_msg)

parser.add_argument('link', help='Interview link string')
parser.add_argument('-a', '--auth', help='Adds given authorization header to GET request')
parser.add_argument('-d', '--display', action='store_true', help='Displays the questions in the terminal')
parser.add_argument('-e', '--encrypted', action='store_true', help='Decrypts questions')
parser.add_argument('-s', '--save', help='Saves questions in text file at given path')

args = parser.parse_args()
if args.auth is None: data = get_json(args.link)
else: data = get_json(args.link, tuple(args.auth.split(' ')))

prepared_data = prepare_questions(data, args.encrypted)

if args.display is not None: display(prepared_data)
if args.save is not None: save_interview_details(prepared_data)