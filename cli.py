import argparse
from view_questions import *

usage_msg = '''[Command format: python view_questions.py INTERVIEW LINK]
               [-e, --encrypted: Pass if questions are encrypted]
               [-s, --save: Pass to save output in text file]'''

parser = argparse.ArgumentParser(prog='QSnatch',
                                 description='Access interview questions',
                                 epilog='The command statement should follow that following format: python MAIN.py INTERVIEW LINK',
                                 usage=usage_msg)

parser.add_argument('link', type=str, nargs='+', help='interview link string')
parser.add_argument('-a', '--auth', type=str, nargs='+')
parser.add_argument('-d', '--display', action='store_true')
parser.add_argument('-e', '--encrypted', action='store_true', help='Decrypts questions')
parser.add_argument('-s', '--save', action='store_true', help='Saves questions to text file')

args = parser.parse_args()
if args.auth is None: data = get_json(args.link)
else: data = get_json(args.link, tuple(args.auth.split(' ')))

prepared_data = prepare_questions(data, args.encrypted)

if args.display is not None: display(prepared_data)
if args.save is not None: save_interview_details(prepared_data)